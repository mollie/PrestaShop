{"version":3,"sources":["webpack://MollieModule.[name]/./src/back/transaction/index.tsx","webpack://MollieModule.[name]/./src/back/transaction/store/actions.ts","webpack://MollieModule.[name]/./src/back/transaction/store/index.ts","webpack://MollieModule.[name]/./src/back/transaction/store/order.ts"],"names":["MolliePanel","lazy","transactionInfo","target","config","translations","currencies","Promise","all","store","default","updateConfig","updateCurrencies","updateOrder","updatePayment","updateTranslations","updateViewportWidth","retrieveOrder","retrievePayment","window","addEventListener","throttle","dispatch","innerWidth","transactionId","substr","render","document","querySelector","ReduxActionTypes","type","order","payment","width","updateWarning","status","orderWarning","devTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","orderApp","state","action","initialViewportwidth","viewportWidth","checkoutApp","combineReducers"],"mappings":"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","file":"transaction.min.js","sourcesContent":["/**\n * Mollie       https://www.mollie.nl\n *\n * @author      Mollie B.V. <info@mollie.nl>\n * @copyright   Mollie B.V.\n * @link        https://github.com/mollie/PrestaShop\n * @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md\n * @codingStandardsIgnoreStart\n */\nimport React, { lazy, Suspense } from 'react';\nimport { render } from 'react-dom';\nimport { StoreContext } from 'redux-react-hook'\nimport { throttle } from 'lodash';\n\nimport { ICurrencies, IMollieOrderConfig, ITranslations } from '@shared/globals';\n\nimport LoadingDots from '@shared/components/LoadingDots';\nimport {updateWarning} from \"@transaction/store/actions\";\n\nconst MolliePanel = lazy(() => import('@transaction/components/MolliePanel'));\n\nexport default function transactionInfo (\n  target: any,\n  config: IMollieOrderConfig,\n  translations: ITranslations,\n  currencies: ICurrencies\n): void {\n  (async function () {\n    const [\n      { default: store },\n      {\n        updateConfig,\n        updateCurrencies,\n        updateOrder,\n        updatePayment,\n        updateTranslations,\n        updateViewportWidth,\n      },\n      { retrieveOrder, retrievePayment },\n    ] = await Promise.all([\n      import(/* webpackPrefetch: true, webpackChunkName: \"transaction\" */ '@transaction/store'),\n      import(/* webpackPrefetch: true, webpackChunkName: \"transaction\" */ '@transaction/store/actions'),\n      import(/* webpackPrefetch: true, webpackChunkName: \"transaction\" */ '@transaction/misc/ajax'),\n    ]);\n\n    // Listen for window resizes\n    window.addEventListener('resize', throttle(() => {\n      store.dispatch(updateViewportWidth(window.innerWidth));\n    }, 200));\n\n    store.dispatch(updateCurrencies(currencies));\n    store.dispatch(updateTranslations(translations));\n    store.dispatch(updateConfig(config));\n\n    const { transactionId } = config;\n    if (transactionId.substr(0, 3) === 'ord') {\n      store.dispatch(updateOrder(await retrieveOrder(transactionId)));\n    } else {\n      store.dispatch(updatePayment(await retrievePayment(transactionId)));\n    }\n\n    render(\n      <StoreContext.Provider value={store}>\n        <Suspense fallback={<LoadingDots/>}>\n          <MolliePanel/>\n        </Suspense>\n      </StoreContext.Provider>,\n      typeof target === 'string' ? document.querySelector(target) : target\n    );\n  }());\n};\n","/**\n * Mollie       https://www.mollie.nl\n *\n * @author      Mollie B.V. <info@mollie.nl>\n * @copyright   Mollie B.V.\n * @link        https://github.com/mollie/PrestaShop\n * @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md\n * @codingStandardsIgnoreStart\n */\n// Action types\nimport { ICurrencies, IMollieApiOrder, IMollieApiPayment, IMollieOrderConfig, ITranslations } from '@shared/globals';\n\nexport enum ReduxActionTypes {\n  updateTranslations = 'UPDATE_MOLLIE_ORDER_TRANSLATIONS',\n  updateConfig = 'UPDATE_MOLLIE_ORDER_CONFIG',\n  updateOrder = 'UPDATE_MOLLIE_ORDER',\n  updatePayment = 'UPDATE_MOLLIE_PAYMENT',\n  updateWarning = 'UPDATE_MOLLIE_WARNING',\n  updateCurrencies = 'UPDATE_MOLLIE_CURRENCIES',\n  updateViewportWidth = 'UPDATE_MOLLIE_VIEWPORT_WIDTH',\n}\n\n// Action creators\nexport interface IUpdateTranslationsAction {\n  type: string;\n  translations: ITranslations;\n}\n\nexport interface IUpdateConfigAction {\n  type: string;\n  config: IMollieOrderConfig;\n}\n\nexport interface IUpdateOrderAction {\n  type: string;\n  order: IMollieApiOrder;\n}\n\nexport interface IUpdatePaymentAction {\n  type: string;\n  payment: IMollieApiPayment;\n}\n\nexport interface IUpdateWarningAction {\n  type: string;\n  orderWarning: string;\n}\n\nexport interface IUpdateCurrenciesAction {\n  type: string;\n  currencies: ICurrencies;\n}\n\nexport interface IUpdateViewportWidthAction {\n  type: string;\n  width: number;\n}\n\nexport function updateTranslations(translations: ITranslations): IUpdateTranslationsAction {\n  return { type: ReduxActionTypes.updateTranslations, translations };\n}\n\nexport function updateCurrencies(currencies: ICurrencies): IUpdateCurrenciesAction {\n  return { type: ReduxActionTypes.updateCurrencies, currencies };\n}\n\nexport function updateConfig(config: IMollieOrderConfig): IUpdateConfigAction {\n  return { type: ReduxActionTypes.updateConfig, config };\n}\n\nexport function updateOrder(order: IMollieApiOrder): IUpdateOrderAction {\n  return { type: ReduxActionTypes.updateOrder, order };\n}\n\nexport function updatePayment(payment: IMollieApiPayment): IUpdatePaymentAction {\n  return { type: ReduxActionTypes.updatePayment, payment };\n}\n\nexport function updateViewportWidth(width: number): IUpdateViewportWidthAction {\n  return { type: ReduxActionTypes.updateViewportWidth, width };\n}\n\nexport function updateWarning(status: string): IUpdateWarningAction {\n  return { type: ReduxActionTypes.updateWarning, orderWarning: status };\n}\n","/**\n * Mollie       https://www.mollie.nl\n *\n * @author      Mollie B.V. <info@mollie.nl>\n * @copyright   Mollie B.V.\n * @link        https://github.com/mollie/PrestaShop\n * @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md\n * @codingStandardsIgnoreStart\n */\nimport { createStore, Store } from 'redux';\nimport orderApp from './order';\n\ndeclare let window: any;\n\nlet store: Store;\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__;\n\nstore = createStore(\n  orderApp,\n  devTools && devTools(),\n);\n\nexport default store;\n","/**\n * Mollie       https://www.mollie.nl\n *\n * @author      Mollie B.V. <info@mollie.nl>\n * @copyright   Mollie B.V.\n * @link        https://github.com/mollie/PrestaShop\n * @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md\n * @codingStandardsIgnoreStart\n */\nimport { combineReducers } from 'redux';\nimport {\n  IUpdateConfigAction,\n  IUpdateCurrenciesAction,\n  IUpdateOrderAction,\n  IUpdatePaymentAction,\n  IUpdateTranslationsAction,\n  IUpdateViewportWidthAction, IUpdateWarningAction,\n  ReduxActionTypes\n} from '@transaction/store/actions';\nimport {\n  ICurrencies,\n  IMollieApiOrder,\n  IMollieApiPayment,\n  IMollieOrderConfig,\n  IMollieOrderDetails,\n  ITranslations\n} from '@shared/globals';\n\ndeclare global {\n  interface IMollieOrderState {\n    translations: ITranslations;\n    config: IMollieOrderConfig;\n    viewportWidth: number;\n    order: IMollieApiOrder;\n    payment: IMollieApiPayment;\n    currencies: ICurrencies;\n    orderWarning: string;\n  }\n}\n\nconst translations = (state: any = {}, action: IUpdateTranslationsAction): ITranslations => {\n  switch (action.type) {\n    case ReduxActionTypes.updateTranslations:\n      return action.translations;\n    default:\n      return state;\n  }\n};\n\nconst config = (state: any = {}, action: IUpdateConfigAction): IMollieOrderConfig => {\n  switch (action.type) {\n    case ReduxActionTypes.updateConfig:\n      return action.config;\n    default:\n      return state;\n  }\n};\n\nconst order = (state: IMollieApiOrder = null, action: IUpdateOrderAction): IMollieApiOrder => {\n  switch (action.type) {\n    case ReduxActionTypes.updateOrder:\n      return action.order;\n    default:\n      return state;\n  }\n};\n\nconst payment = (state: IMollieApiPayment = null, action: IUpdatePaymentAction): IMollieApiPayment => {\n  switch (action.type) {\n    case ReduxActionTypes.updatePayment:\n      return action.payment;\n    default:\n      return state;\n  }\n};\n\nconst currencies = (state: ICurrencies = {}, action: IUpdateCurrenciesAction): ICurrencies => {\n  switch (action.type) {\n    case ReduxActionTypes.updateCurrencies:\n      return action.currencies;\n    default:\n      return state;\n  }\n};\n\nconst initialViewportwidth = window.innerWidth;\nconst viewportWidth = (state = initialViewportwidth, action: IUpdateViewportWidthAction): number => {\n  switch (action.type) {\n    case ReduxActionTypes.updateViewportWidth:\n      return action.width;\n    default:\n      return state;\n  }\n};\n\nconst orderWarning = (state: any = {}, action: IUpdateWarningAction): string => {\n  switch (action.type) {\n    case ReduxActionTypes.updateWarning:\n      return action.orderWarning;\n    default:\n      return state;\n  }\n};\n\nconst checkoutApp = combineReducers({\n  translations,\n  config,\n  order,\n  payment,\n  currencies,\n  viewportWidth,\n  orderWarning,\n});\n\nexport default checkoutApp;\n"],"sourceRoot":""}