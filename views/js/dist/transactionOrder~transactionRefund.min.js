/*!
 * 
 *     Mollie       https://www.mollie.nl
 *     @author      Mollie B.V. <info@mollie.nl>
 *     @copyright   Mollie B.V.
 *     @link        https://github.com/mollie/PrestaShop
 *     @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md
 *   
 */
(window["webpackJsonP_mollie"] = window["webpackJsonP_mollie"] || []).push([["transactionOrder~transactionRefund"],{

/***/ "./src/back/transaction/components/orderlines/WarningContent.tsx":
/*!***********************************************************************!*\
  !*** ./src/back/transaction/components/orderlines/WarningContent.tsx ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return WarningContent; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_react_hook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-react-hook */ "./node_modules/redux-react-hook/dist/index.es.js");
/**
 * Mollie       https://www.mollie.nl
 *
 * @author      Mollie B.V. <info@mollie.nl>
 * @copyright   Mollie B.V.
 * @link        https://github.com/mollie/PrestaShop
 * @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md
 * @codingStandardsIgnoreStart
 */


function WarningContent() {
  var _useMappedState = Object(redux_react_hook__WEBPACK_IMPORTED_MODULE_1__["useMappedState"])(function (state) {
    return {
      orderWarning: state.orderWarning,
      translations: state.translations
    };
  }),
      orderWarning = _useMappedState.orderWarning,
      translations = _useMappedState.translations;

  var message = '';

  switch (orderWarning) {
    case "refunded":
      message = translations.refundSuccessMessage;
      break;

    case "shipped":
      message = translations.shipmentWarning;
      break;

    case "canceled":
      message = translations.cancelWarning;
      break;

    default:
      message = '';
  }

  if (!message) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null);
  }

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: "alert alert-success"
  }, message));
}

/***/ }),

/***/ "./src/shared/tools.ts":
/*!*****************************!*\
  !*** ./src/shared/tools.ts ***!
  \*****************************/
/*! exports provided: formattedNumberToFloat, formatNumber, psRound, getNumberFormat, findGetParameter, formatMoneyValue, psFormatCurrency, formatCurrency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formattedNumberToFloat", function() { return formattedNumberToFloat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatNumber", function() { return formatNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "psRound", function() { return psRound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNumberFormat", function() { return getNumberFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findGetParameter", function() { return findGetParameter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatMoneyValue", function() { return formatMoneyValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "psFormatCurrency", function() { return psFormatCurrency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatCurrency", function() { return formatCurrency; });
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ "./node_modules/core-js/modules/es7.symbol.async-iterator.js");
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.symbol */ "./node_modules/core-js/modules/es6.symbol.js");
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.regexp.search */ "./node_modules/core-js/modules/es6.regexp.search.js");
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ "./node_modules/core-js/modules/es6.regexp.split.js");
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.regexp.replace */ "./node_modules/core-js/modules/es6.regexp.replace.js");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var locutus_php_info_version_compare__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! locutus/php/info/version_compare */ "./node_modules/locutus/php/info/version_compare.js");
/* harmony import */ var locutus_php_info_version_compare__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(locutus_php_info_version_compare__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);






function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/**
 * Mollie       https://www.mollie.nl
 *
 * @author      Mollie B.V. <info@mollie.nl>
 * @copyright   Mollie B.V.
 * @link        https://github.com/mollie/PrestaShop
 * @license     https://github.com/mollie/PrestaShop/blob/master/LICENSE.md
 * @codingStandardsIgnoreStart
 */

/*eslint @typescript-eslint/camelcase:off, eqeqeq:off */



function ceilf(value, precision) {
  if (typeof precision === 'undefined') {
    precision = 0;
  }

  var precisionFactor = precision === 0 ? 1 : Math.pow(10, precision);
  var tmp = value * precisionFactor;
  var tmp2 = String(tmp);

  if (tmp2[tmp2.length - 1] === '0') {
    return value;
  }

  return Math.ceil(value * precisionFactor) / precisionFactor;
}

function floorf(value, precision) {
  if (typeof precision === 'undefined') {
    precision = 0;
  }

  var precisionFactor = precision === 0 ? 1 : Math.pow(10, precision);
  var tmp = value * precisionFactor;
  var tmp2 = String(tmp);

  if (tmp2[tmp2.length - 1] === '0') {
    return value;
  }

  return Math.floor(value * precisionFactor) / precisionFactor;
}

var formattedNumberToFloat = function formattedNumberToFloat(price, currencyFormat, currencySign) {
  if (typeof price === 'number') {
    price = String(price);
  }

  price = price.replace(currencySign, '');

  if (currencyFormat === 1) {
    return parseFloat(price.replace(',', '').replace(' ', ''));
  } else if (currencyFormat === 2) {
    return parseFloat(price.replace(' ', '').replace(',', '.'));
  } else if (currencyFormat === 3) {
    return parseFloat(price.replace('.', '').replace(' ', '').replace(',', '.'));
  } else if (currencyFormat === 4) {
    return parseFloat(price.replace(',', '').replace(' ', ''));
  }

  return price;
}; // Return a formatted number

var formatNumber = function formatNumber(value, numberOfDecimal, thousenSeparator, virgule) {
  if (typeof numberOfDecimal === 'string') {
    numberOfDecimal = parseInt(numberOfDecimal, 10);
  }

  if (typeof value === 'string') {
    value = parseFloat(value);
  }

  value = value.toFixed(numberOfDecimal);
  var valString = value + '';
  var tmp = valString.split('.');
  var absValString = tmp.length === 2 ? tmp[0] : valString;
  var deciString = ('0.' + (tmp.length === 2 ? tmp[1] : 0)).substr(2);
  var nb = absValString.length;

  for (var i = 1; i < 4; i++) {
    if (parseFloat(value) >= Math.pow(10, 3 * i)) {
      absValString = absValString.substring(0, nb - 3 * i) + thousenSeparator + absValString.substring(nb - 3 * i);
    }
  }

  if (numberOfDecimal === 0) {
    return absValString;
  }

  return absValString + virgule + (deciString ? deciString : '00');
};

function psRoundHelper(value, mode) {
  // From PHP Math.c
  var tmpValue;

  if (value >= 0.0) {
    tmpValue = Math.floor(value + 0.5);

    if (mode === 3 && value === -0.5 + tmpValue || mode === 4 && value === 0.5 + 2 * Math.floor(tmpValue / 2.0) || mode === 5 && value === 0.5 + 2 * Math.floor(tmpValue / 2.0) - 1.0) {
      tmpValue -= 1.0;
    }
  } else {
    tmpValue = Math.ceil(value - 0.5);

    if (mode === 3 && value === 0.5 + tmpValue || mode === 4 && value === -0.5 + 2 * Math.ceil(tmpValue / 2.0) || mode === 5 && value === -0.5 + 2 * Math.ceil(tmpValue / 2.0) + 1.0) {
      tmpValue += 1.0;
    }
  }

  return tmpValue;
}

function psLog10(value) {
  return Math.log(value) / Math.LN10;
}

function psRoundHalfUp(value, precision) {
  var mul = Math.pow(10, precision);
  var val = value * mul;
  var nextDigit = Math.floor(val * 10) - 10 * Math.floor(val);

  if (nextDigit >= 5) {
    val = Math.ceil(val);
  } else {
    val = Math.floor(val);
  }

  return val / mul;
}

var psRound = function psRound(value, places) {
  var method;

  if (typeof value === 'string') {
    value = parseFloat(value);
  }

  if (typeof window.roundMode === 'undefined') {
    method = 2;
  } else {
    method = window.roundMode;
  }

  if (typeof places === 'undefined') {
    places = 2;
  }

  var tmpValue;

  if (method === 0) {
    return ceilf(value, places);
  } else if (method === 1) {
    return floorf(value, places);
  } else if (method === 2) {
    return psRoundHalfUp(value, places);
  } else if (method == 3 || method == 4 || method == 5) {
    // From PHP Math.c
    var precision_places = 14 - Math.floor(psLog10(Math.abs(value)));
    var f1 = Math.pow(10, Math.abs(places));

    if (precision_places > places && precision_places - places < 15) {
      var f2 = Math.pow(10, Math.abs(precision_places));

      if (precision_places >= 0) {
        tmpValue = value * f2;
      } else {
        tmpValue = value / f2;
      }

      tmpValue = psRoundHelper(tmpValue, method);
      /* now correctly move the decimal point */

      f2 = Math.pow(10, Math.abs(places - precision_places));
      /* because places < precision_places */

      tmpValue /= f2;
    } else {
      /* adjust the value */
      if (places >= 0) {
        tmpValue = value * f1;
      } else {
        tmpValue = value / f1;
      }

      if (Math.abs(tmpValue) >= 1e15) {
        return value;
      }
    }

    tmpValue = psRoundHelper(tmpValue, method);

    if (places > 0) {
      tmpValue = tmpValue / f1;
    } else {
      tmpValue = tmpValue * f1;
    }

    return tmpValue;
  }
};
var getNumberFormat = function getNumberFormat(currencyFormat) {
  if (typeof currencyFormat === 'string') {
    currencyFormat = parseInt(currencyFormat, 10);
  }

  switch (currencyFormat) {
    case 1:
      return {
        comma: '.',
        thousands: ','
      };

    case 2:
      return {
        comma: ',',
        thousands: ' '
      };

    case 4:
      return {
        comma: '.',
        thousands: ','
      };

    case 5:
      return {
        comma: '.',
        thousands: '\''
      };

    default:
      return {
        comma: ',',
        thousands: '.'
      };
  }
};
var findGetParameter = function findGetParameter(parameterName) {
  var result = null;
  var tmp = [];
  var items = window.location.search.substr(1).split('&');

  for (var index = 0; index < items.length; index++) {
    tmp = items[index].split('=');

    if (tmp[0] === parameterName) {
      result = decodeURIComponent(tmp[1]);
    }
  }

  return result;
};
/**
 * Filter money value (EUR / 2 decimals)
 *
 * @param val {number|string}
 *
 * @returns {number}
 */

var formatMoneyValue = function formatMoneyValue(val) {
  if (typeof val === 'string') {
    val = parseFloat(val.replace(/,/, '.'));
  }

  if (typeof val !== 'number' || isNaN(val)) {
    val = 0;
  }

  return val;
};
var psFormatCurrency = function psFormatCurrency(price, currencyFormat, currencySign, currencyBlank) {
  if (typeof price === 'string') {
    price = parseFloat(price);
  }

  var currency = 'EUR';

  if (typeof window.currency_iso_code !== 'undefined' && window.currency_iso_code.length === 3) {
    currency = window.currency_iso_code;
  } else if (_typeof(window.currency) === 'object' && typeof window.currency.iso_code !== 'undefined' && window.currency.iso_code.length === 3) {
    currency = window.currency.iso_code;
  }

  var displayPrecision;

  if (typeof window.priceDisplayPrecision !== 'undefined') {
    displayPrecision = window.priceDisplayPrecision;
  }

  try {
    if (typeof window.currencyModes !== 'undefined' && typeof window.currencyModes[currency] !== 'undefined' && window.currencyModes[currency]) {
      price = psRound(price.toFixed(10), displayPrecision);
      var locale = document.documentElement.lang;

      if (locale.length === 5) {
        locale = locale.substring(0, 2).toLowerCase() + '-' + locale.substring(3, 5).toUpperCase();
      } else if (typeof window.full_language_code !== 'undefined' && window.full_language_code.length === 5) {
        locale = window.full_language_code.substring(0, 2).toLowerCase() + '-' + window.full_language_code.substring(3, 5).toUpperCase();
      } else if (window.getBrowserLocale().length === 5) {
        locale = window.getBrowserLocale().substring(0, 2).toLowerCase() + '-' + window.getBrowserLocale().substring(3, 5).toUpperCase();
      }

      var formattedCurrency = price.toLocaleString(locale, {
        style: 'currency',
        currency: 'USD',
        currencyDisplay: 'code'
      });

      if (currencySign) {
        formattedCurrency = formattedCurrency.replace('USD', currencySign);
      }

      return formattedCurrency;
    }
  } catch (e) {// Just continue, Intl data is not available on every browser and crashes
  }

  var blank = '';
  price = psRound(price.toFixed(10), displayPrecision);

  if (typeof currencyBlank !== 'undefined' && currencyBlank) {
    blank = ' ';
  }

  if (currencyFormat == 1) {
    return currencySign + blank + formatNumber(price, displayPrecision, ',', '.');
  }

  if (currencyFormat == 2) {
    return formatNumber(price, displayPrecision, ' ', ',') + blank + currencySign;
  }

  if (currencyFormat == 3) {
    return currencySign + blank + formatNumber(price, displayPrecision, '.', ',');
  }

  if (currencyFormat == 4) {
    return formatNumber(price, displayPrecision, ',', '.') + blank + currencySign;
  }

  if (currencyFormat == 5) {
    return currencySign + blank + formatNumber(price, displayPrecision, '\'', '.');
  }

  return String(price);
};
var formatCurrency = function formatCurrency(price, currency) {
  if (typeof currency === 'undefined') {
    console.error('Currency undefined');
    return '';
  }

  if (typeof window._PS_VERSION_ === 'string' && locutus_php_info_version_compare__WEBPACK_IMPORTED_MODULE_5___default()(window._PS_VERSION_, '1.7.0.0', '>=') || typeof window.formatCurrencyCldr !== 'undefined') {
    // PrestaShop 1.7 CLDR
    return new Intl.NumberFormat(Object(lodash__WEBPACK_IMPORTED_MODULE_6__["get"])(document.documentElement, 'lang'), {
      style: 'currency',
      currency: currency.iso_code
    }).format(price);
  }

  return psFormatCurrency(price, currency.format, currency.sign, currency.blank);
};

/***/ })

}]);
//# sourceMappingURL=transactionOrder~transactionRefund.min.js.map