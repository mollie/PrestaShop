name: Cypress E2E Automation
on:
  pull_request:
    types: [opened, reopened]
    branches: '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Cypress-E2E:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - prestashop: 'PS1784'
            make: 'make e2eh1784'
            demoshop: 'demoshop1784'
            port: '8002'
            yml: 'docker-compose.1784.yml'
            url: 'https://demoshop1784.eu.ngrok.io'
            test_spec: '**/cypress/e2e/ps1784/**'
            TestRailID: R4954
            ModuleUpgradeTest: 'make upgrading-module-test-1784'
          - prestashop: 'PS8'
            make: 'make e2eh8'
            demoshop: 'demoshop8'
            port: '8142'
            yml: 'docker-compose.8.yml'
            url: 'https://demoshop8.eu.ngrok.io'
            test_spec: '**/cypress/e2e/ps8/**'
            TestRailID: R6470
    env:
      NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - run: wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        shell: bash
      - run: unzip -qq -o ngrok-stable-linux-amd64.zip
        shell: bash
      - run: ./ngrok authtoken ${{ secrets.NGROK_TOKEN }}
        shell: bash
      - run: ./ngrok http -region=eu -subdomain=${{ matrix.demoshop }} ${{ matrix.port }} > ngrok.log &
        shell: bash
      - name: Install composer
        run: composer i

      - name: Install package
        run: |
          npm ci
          npm update
          npx browserslist@latest --update-db

      - name: ${{ matrix.prestashop }} installing / Module Install and Uninstall testing
        run: |
          ${{ matrix.make }}

      - name: Running ${{ matrix.prestashop }} Cypress E2E tests
        run: |
          export CYPRESS_baseUrl='${{ matrix.url }}'
          export CYPRESS_MOLLIE_TEST_API_KEY=${{ secrets.MOLLIE_TEST_API_KEY }}
          export CYPRESS_MOLLIE_TEST_PROFILE_ID=${{ secrets.MOLLIE_TEST_PROFILE_ID }}
          export CYPRESS_TESTRAIL_RUN_ID=${{ matrix.TestRailID }}
          export CYPRESS_TESTRAIL_DOMAIN='${{ secrets.TESTRAIL_DOMAIN }}'
          export CYPRESS_TESTRAIL_USERNAME='${{ secrets.TESTRAIL_USERNAME }}'
          export CYPRESS_TESTRAIL_PASSWORD='${{ secrets.TESTRAIL_PASSWORD }}'
          npm install cypress@12.15.0
          npm ci
          npx cypress run --spec "${{ matrix.test_spec }}" --browser chrome

      - name: Archive videos and screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: videos_screenshots
          retention-days: 2
          path: |
            cypress/videos
            cypress/screenshots
